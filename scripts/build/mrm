#!/usr/bin/env python
"""Front-end that imports the MRM regression system.

<TODO>: set relative path to modularmake/mrm/shared from this directory to 
        PATH_TO_MRM_SHARED_DIR variable. Once set, you can try with 'mrm -h'
        to see if the front-end has found the mrm_base.py implementation. 
        An error will be printed if detection fails. Example: 
          PATH_TO_MRM_SHARED_DIR = "../../modularmake/shared"

Author: Mikko Jarvela
"""

import os
import sys

PATH_TO_MRM_SHARED_DIR = "../../../modularmake/shared"

# Check that the path to PATH_TO_MRM_SHARED_DIR exists.
if os.path.isabs(PATH_TO_MRM_SHARED_DIR) :
  if not os.path.exists(PATH_TO_MRM_SHARED_DIR):
    print "ERROR: Could not locate mrm_base.py from path '%s'." % PATH_TO_MRM_SHARED_DIR
    print " -> Have you included modularmake library to your project?"
    exit(1)
  sys.path.append(PATH_TO_MRM_SHARED_DIR)
else:
  abs_path = os.path.dirname(os.path.abspath(__file__)) + "/" + PATH_TO_MRM_SHARED_DIR
  if not os.path.exists(abs_path):
    print "ERROR: Could not locate mrm_base.py from path '%s'." % abs_path
    print " -> Have you included modularmake library to your project?"
    exit(1)
  sys.path.append(abs_path)
  
# This variable must must be set. It contains absolute path to regression directory.
os.environ["MRM_REGR_ROOT_DIR"] = os.path.dirname(os.path.abspath(__file__))

# Add path to mrm_base.py to system path and then import mrm_base.py from there.
from mrm_base import *
